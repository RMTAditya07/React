These objects are called “React elements”. You can think of them as descriptions of what you want to see on the screen.

You can use JSX inside of if statements and for loops, assign it to variables, accept it as arguments, and return it from functions

An element describes what you want to see on the screen:

Unlike browser DOM elements, React elements are plain objects, and are cheap to create. React DOM takes care of updating the DOM to match the React elements.

Elements are what components are “made of”



createRoot() controls the contents of the container node you pass in. Any existing DOM elements inside are replaced when render is called. Later calls use React’s DOM diffing algorithm for efficient updates.

createRoot() does not modify the container node (only modifies the children of the container). It may be possible to insert a component to an existing DOM node without overwriting the existing children.


To render a React element, first pass the DOM element to ReactDOM.createRoot(), then pass the React element to root.render()


React elements are immutable. Once you create an element, you can’t change its children or attributes
An element is like a single frame in a movie: it represents the UI at a certain point in time.

the only way to update the UI is to create a new element, and pass it to root.render()